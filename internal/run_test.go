package internal_test

import (
	"net/http"
	"os"
	"testing"
	"time"

	"murmappcaster/internal"

	"github.com/eugene-ruby/xencryptor/xsecrets"
	"github.com/stretchr/testify/require"
)

func TestRun_HealthzOK(t *testing.T) {
	// üîê Master key, —Ç–∞–∫–æ–π –∂–µ –∫–∞–∫ –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è —á–µ—Ä–µ–∑ -ldflags
	masterKey := "test-master-key"

	// üîê –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–ª—é—á–µ–π
	payloadKey := "payload-key-1234567890"
	secretKey := "secretbot-key-abcdef"

	// derive & encrypt
	payloadEncKey, _ := xsecrets.EncryptBase64WithKey([]byte(payloadKey), xsecrets.DeriveKey([]byte(masterKey), "payload"))
	secretEncKey, _ := xsecrets.EncryptBase64WithKey([]byte(secretKey), xsecrets.DeriveKey([]byte(masterKey), "bot"))

	// private RSA (PEM) ‚Üí –∑–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å
	pemPriv, _, _ := xsecrets.GenerateKeyPair()
	privEncrypted, _ := xsecrets.EncryptPrivateRSA(pemPriv, masterKey, "privateKey")

	// ‚úÖ ENV –¥–ª—è Run()
	os.Setenv("APP_PORT", "3999")
	os.Setenv("SECRET_SALT", "somesalt")
	os.Setenv("WEB_HOOK_HOST", "https://example.com")
	os.Setenv("TELEGRAM_API_URL", "https://api.telegram.org")
	os.Setenv("RABBITMQ_URL", "amqp://guest:guest@localhost:5672")
	os.Setenv("REDIS_URL", "redis://localhost:6379")
	os.Setenv("PAYLOAD_ENCRYPTION_KEY", payloadEncKey)
	os.Setenv("SECRET_BOT_ENCRYPTION_KEY", secretEncKey)
	os.Setenv("ENCRYPTED_PRIVATE_KEY", privEncrypted)

	// ‚è≥ –°—Ç–∞—Ä—Ç—É–µ–º Run()
	go func() {
		err := internal.Run()
		require.NoError(t, err)
	}()

	// ‚è≤ –ñ–¥—ë–º, –ø–æ–∫–∞ —Å–µ—Ä–≤–µ—Ä –ø–æ–¥–Ω–∏–º–µ—Ç—Å—è
	time.Sleep(1 * time.Second)

	// ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º /healthz
	resp, err := http.Get("http://localhost:3999/healthz")
	require.NoError(t, err)
	defer resp.Body.Close()
	require.Equal(t, http.StatusOK, resp.StatusCode)
}
